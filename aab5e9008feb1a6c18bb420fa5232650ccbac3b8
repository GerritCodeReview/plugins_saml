{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "427af990_83361396",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2024-02-20T15:13:47Z",
      "side": 1,
      "message": "I get the following error, when trying to start Gerrit:\n\n```\n[2024-02-20T16:12:53.047+01:00] [main] ERROR com.google.gerrit.pgm.Daemon : Unable to start daemon\ncom.google.inject.CreationException: Unable to create injector, see the following errors:\n\n1) [Guice/ErrorInjectingConstructor]: IllegalArgumentException: Unable to instantiate front-end HTTP Filter SamlWebFilter\n  at JettyServer.\u003cinit\u003e(JettyServer.java:218)\n  at JettyModule.configure(JettyModule.java:31)\n  while locating JettyServer\n\nLearn more:\n  https://github.com/google/guice/wiki/ERROR_INJECTING_CONSTRUCTOR\nCaused by: IllegalArgumentException: Unable to instantiate front-end HTTP Filter SamlWebFilter\n\tat JettyServer.makeContext(JettyServer.java:562)\n\tat JettyServer.makeContext(JettyServer.java:504)\n\tat JettyServer.\u003cinit\u003e(JettyServer.java:258)\n\tat JettyServer$$FastClassByGuice$$41461b69.GUICE$TRAMPOLINE(\u003cgenerated\u003e)\n\tat JettyServer$$FastClassByGuice$$41461b69.apply(\u003cgenerated\u003e)\n\tat DefaultConstructionProxyFactory$FastClassProxy.newInstance(DefaultConstructionProxyFactory.java:82)\n\tat ConstructorInjector.provision(ConstructorInjector.java:114)\n\tat ConstructorInjector.construct(ConstructorInjector.java:91)\n\tat ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:300)\n\tat ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\n\tat SingletonScope$1.get(SingletonScope.java:169)\n\tat InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:45)\n\tat InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:213)\n\tat InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:186)\n\tat InternalInjectorCreator.build(InternalInjectorCreator.java:113)\n\tat InjectorImpl.createChildInjector(InjectorImpl.java:240)\n\tat Daemon.createHttpdInjector(Daemon.java:682)\n\tat Daemon.initHttpd(Daemon.java:633)\n\tat Daemon.start(Daemon.java:402)\n\tat Daemon.run(Daemon.java:298)\n\tat AbstractProgram.main(AbstractProgram.java:62)\n\tat java.base/NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/Method.invoke(Method.java:568)\n\tat GerritLauncher.invokeProgram(GerritLauncher.java:252)\n\tat GerritLauncher.mainImpl(GerritLauncher.java:148)\n\tat GerritLauncher.main(GerritLauncher.java:93)\n\tat Main.main(Main.java:30)\nCaused by: ConfigurationException: Guice configuration errors:\n\n1) [Guice/MissingImplementation]: No implementation for Set\u003cString\u003e annotated with @AuthHeaders() was bound.\n\nRequested by:\n1  : SamlWebFilter.\u003cinit\u003e(SamlWebFilter.java:87)\n      \\_ for 4th parameter authHeaders\n     while locating SamlWebFilter\n\nLearn more:\n  https://github.com/google/guice/wiki/MISSING_IMPLEMENTATION\n  ```",
      "revId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "112459b4_079e88ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2024-02-21T10:06:12Z",
      "side": 1,
      "message": "have you added the `gerrit.installModule \u003d ...` to your `gerrit.config`?",
      "parentUuid": "427af990_83361396",
      "revId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2994ad90_44b32b14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2024-02-21T13:29:08Z",
      "side": 1,
      "message": "I didn\u0027t. Used a config designed for the state before this change series. My bad.",
      "parentUuid": "112459b4_079e88ef",
      "revId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "aab5e9008feb1a6c18bb420fa5232650ccbac3b8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}